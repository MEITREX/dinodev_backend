type Issue {
    id: ID!
    title: String!
    description: String
    state: IssueState!
    type: IssueType!

    sprintNumber: Int
    sprint: Sprint @OnDemand

    assigneeIds: [UUID!]!
    assignees: [GlobalUser!]! @OnDemand
}

type IssueType {
    name: String!
    description: String
    iconPath: String
}

type IssueMutation {
    projectId: UUID!
    issueId: ID!

    changeIssueTitle(title: String!): Issue!
    changeIssueDescription(description: String): Issue!
    changeIssueState(stateName: String!): Issue!
    changeIssueType(typeName: String!): Issue!

    assignIssue(assigneeId: UUID): Issue!
}

type ProjectBoard {
    projectId: UUID!
    states: [IssueState!]!
}

input CreateIssueInput {
    title: String! @NotBlank
    description: String
    stateName: String! @NotBlank
    typeName: String! @NotBlank
    sprintNumber: Int
    assigneeIds: [UUID!]!
}


